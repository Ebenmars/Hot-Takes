{"ast":null,"code":"import React,{useState}from\"react\";// getting the section and default posts\nimport{SECTIONS}from\"./data.js\";import supabase from\"./supabase\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostFeed(_ref){let{posts,setPosts}=_ref;// using state to open and close the overlay\nconst[modalIndex,setModalIndex]=useState(null);//function call to open the overlay\nconst openModal=index=>{setModalIndex(index);};//function call to close the overlay\nconst closeModal=()=>{setModalIndex(null);};if(posts.length===0){return/*#__PURE__*/_jsx(\"h2\",{children:\"No Posts\"});}return/*#__PURE__*/_jsx(\"section\",{children:/*#__PURE__*/_jsx(\"ul\",{id:\"posts-list\",children:posts&&posts.map((post,index)=>{// formating the data and time\nlet date=new Date(post.created_at);let formattedDate=date.toLocaleDateString();let formattedTime=date.toLocaleTimeString(\"en-US\",{hour:\"2-digit\",minute:\"2-digit\"});let backgroundColor=\"#000000\";let textColor=\"#ffffff\";//getting the section\nlet section=SECTIONS.find(section=>section.name===post.category);//if the section is true the background color will be the color listed in the section object\nif(section){backgroundColor=section.color;}if([\"Soccer\",\"F1\",\"Home\"].includes(section.name)){textColor=\"#000000\";}return Post(post,setPosts,index,openModal,formattedDate,formattedTime,backgroundColor,textColor,modalIndex,closeModal);})})});}function Post(post,setPosts,index,openModal,formattedDate,formattedTime,backgroundColor,textColor,modalIndex,closeModal){const[isUpdating,setIsUpdating]=useState(false);async function handleVotes(columnName){setIsUpdating(true);const{data:updatedPost,error}=await supabase.from(\"posts\").update({[columnName]:post[columnName]+1}).eq(\"id\",post.id).select();setIsUpdating(false);if(!error)setPosts(posts=>posts.map(p=>p.id===post.id?updatedPost[0]:p));}return/*#__PURE__*/ (// create a post on the post feed\n_jsxs(\"li\",{className:\"post-on-feed\"//when the user clicks on the post open the overlay\n,id:\"post-\".concat(index),children:[/*#__PURE__*/_jsx(\"h6\",{children:post.title}),/*#__PURE__*/_jsxs(\"span\",{children:[formattedDate,\" \",formattedTime]}),/*#__PURE__*/_jsx(\"span\",{className:\"tag\",style:{backgroundColor,color:textColor},children:post.category}),/*#__PURE__*/_jsxs(\"div\",{className:\"post-buttons\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"other-buttons\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>openModal(index),children:/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-bars\",style:{color:\"#ffffff\"}})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"thumbs-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleVotes(\"thumbsUp\"),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-regular fa-thumbs-up\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:post.thumbsUp})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleVotes(\"thumbsDown\"),disabled:isUpdating,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa-regular fa-thumbs-down\"}),\" \",/*#__PURE__*/_jsx(\"strong\",{children:post.thumbsDown})]})]})]}),modalIndex===index&&/*#__PURE__*/_jsx(\"div\",{id:\"modal-\".concat(index),className:\"modal \".concat(modalIndex===index?\"modal-open\":\"\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"close\",id:\"close-\".concat(index),onClick:event=>{event.stopPropagation();//call close function which sets modelIndex to null\ncloseModal();},children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"h6\",{children:post.title}),/*#__PURE__*/_jsx(\"p\",{children:post.description})]})})]},post.id));}export default PostFeed;","map":{"version":3,"names":["React","useState","SECTIONS","supabase","jsx","_jsx","jsxs","_jsxs","PostFeed","_ref","posts","setPosts","modalIndex","setModalIndex","openModal","index","closeModal","length","children","id","map","post","date","Date","created_at","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","backgroundColor","textColor","section","find","name","category","color","includes","Post","isUpdating","setIsUpdating","handleVotes","columnName","data","updatedPost","error","from","update","eq","select","p","className","concat","title","style","onClick","disabled","thumbsUp","thumbsDown","event","stopPropagation","description"],"sources":["/Users/ignite/Hot Takes/src/PostFeed.js"],"sourcesContent":["import React, { useState } from \"react\";\n// getting the section and default posts\nimport { SECTIONS } from \"./data.js\";\nimport supabase from \"./supabase\";\n\n\n\nfunction PostFeed({posts, setPosts}) {\n\n  // using state to open and close the overlay\n  const [modalIndex, setModalIndex] = useState(null);\n\n  //function call to open the overlay\n  const openModal = (index) => {\n    setModalIndex(index);\n  };\n\n   //function call to close the overlay\n  const closeModal = () => {\n    setModalIndex(null);\n  };\n\n\n  if(posts.length === 0){\n    return (<h2>No Posts</h2>\n    );\n  }\n\n\n  return (\n<section>\n    <ul id=\"posts-list\">\n      {/* looping through the posts , index is the */}\n      { posts && posts.map((post, index) => {\n        // formating the data and time\n        let date = new Date(post.created_at);\n        let formattedDate = date.toLocaleDateString();\n        let formattedTime = date.toLocaleTimeString(\"en-US\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        let backgroundColor = \"#000000\";\n        let textColor = \"#ffffff\";\n        //getting the section\n        let section = SECTIONS.find(\n          (section) => section.name === post.category\n        );\n\n        //if the section is true the background color will be the color listed in the section object\n        if (section) {\n          backgroundColor = section.color;\n        }\n        if ([\"Soccer\", \"F1\", \"Home\"].includes(section.name)) {\n          textColor = \"#000000\";\n        }\n\n        return Post(\n          post,\n          setPosts,\n          index,\n          openModal,\n          formattedDate,\n          formattedTime,\n          backgroundColor,\n          textColor,\n          modalIndex,\n          closeModal\n        );\n        \n      })}\n    </ul>\n    </section>\n  );\n}\n\nfunction Post(\n  post,\n  setPosts,\n  index,\n  openModal,\n  formattedDate,\n  formattedTime,\n  backgroundColor,\n  textColor,\n  modalIndex,\n  closeModal\n) {\n\n  const [isUpdating, setIsUpdating] = useState(false);\n\n\n  async function handleVotes(columnName){\n    setIsUpdating(true);\n  const {data:updatedPost, error } = await supabase.from(\"posts\").update({[columnName]: post[columnName] + 1 }).eq(\"id\", post.id)\n    .select();\n    setIsUpdating(false);\n    if(!error) setPosts((posts) => posts.map(p => p.id === post.id ? updatedPost[0] : p));\n  }\n\n  \n\n  return (\n    // create a post on the post feed\n    <li\n      key={post.id}\n      className=\"post-on-feed\"\n      //when the user clicks on the post open the overlay\n      id={`post-${index}`}\n      \n    >\n      <h6>{post.title}</h6>\n      <span>\n        {formattedDate} {formattedTime}\n      </span>\n      <span className=\"tag\" style={{ backgroundColor, color: textColor }}>\n        {post.category}\n      </span>\n      <div className=\"post-buttons\">\n  <div className=\"other-buttons\">\n    <button onClick={() => openModal(index)}>\n      <i className=\"fa-solid fa-bars\" style={{color: \"#ffffff\"}}></i>\n    </button>\n  </div>\n  <div className=\"thumbs-buttons\">\n    <button onClick={() => handleVotes(\"thumbsUp\")} disabled={isUpdating}>\n      <i className=\"fa-regular fa-thumbs-up\"></i>{\" \"}\n      <strong>{post.thumbsUp}</strong>\n    </button>\n    <button  onClick={() => handleVotes(\"thumbsDown\")} disabled={isUpdating}>\n      <i className=\"fa-regular fa-thumbs-down\"></i>{\" \"}\n      <strong>{post.thumbsDown}</strong>\n    </button>\n  </div>\n</div>\n      {/* if the modelIndex is equal to the current index , show the overlay*/}\n      {modalIndex === index && (\n        <div\n          id={`modal-${index}`}\n          className={`modal ${modalIndex === index ? \"modal-open\" : \"\"}`}>\n            {/* This is the information that is in the overlay */}\n          <div className=\"modal-content\">\n            {/* logic for the close button */}\n            <span\n              className=\"close\"\n              id={`close-${index}`}\n              onClick={(event) => {\n                event.stopPropagation();\n                //call close function which sets modelIndex to null\n                closeModal();\n              }}>\n              Ã—\n            </span>\n            <h6>{post.title}</h6>\n            <p>{post.description}</p>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default PostFeed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
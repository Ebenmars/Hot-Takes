{"ast":null,"code":"var _jsxFileName = \"/Users/ignite/Hot Takes/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport supabase from \"./supabase\";\nimport \"./styles.css\";\nimport CatagoryFilter from \"./CatagoryFilter\";\nimport NewPostForm from \"./NewPostForm\";\nimport PostFeed from \"./PostFeed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // the form is initially at false which means hidden\n  const [showForm, setShowForm] = useState(false);\n  //used to define posts\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //using  this to get the posts from the database \n  useEffect(function () {\n    async function getPosts() {\n      setIsLoading(true);\n      //I will make a dropdown menu and user can pick if they want most recent posts or if they want the votes with the most upvots \n      const {\n        data: posts,\n        error\n      } = await supabase.from(\"posts\").select(\"*\").order(\"\");\n      //setting the posts\n      setPosts(posts);\n      //after the data has loaded\n      setIsLoading(false);\n    }\n    getPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      show: showForm,\n      setShowForm: setShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(NewPostForm, {\n      setPosts: setPosts,\n      setShowForm: setShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(CatagoryFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(PostFeed, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: \"Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"9HY9jNVLsWz9OO36v+G5Hpr/G3c=\");\n_c = App;\nfunction Loader() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    style: {\n      textTransform: \"uppercase\",\n      textAlign: \"center\",\n      marginTop: \"100px\"\n    },\n    children: \"Loading... Please Wait\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Loader;\nfunction Header({\n  show,\n  setShowForm\n}) {\n  const appTitle = \"Hot Takes\";\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: appTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      id: \"create-post\",\n      onClick: () => setShowForm(show => !show),\n      children: show ? \"x\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c3 = Header;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"Header\");","map":{"version":3,"names":["useEffect","useState","supabase","CatagoryFilter","NewPostForm","PostFeed","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showForm","setShowForm","posts","setPosts","isLoading","setIsLoading","getPosts","data","error","from","select","order","children","Header","show","fileName","_jsxFileName","lineNumber","columnNumber","className","Loader","_c","style","textTransform","textAlign","marginTop","_c2","appTitle","id","onClick","_c3","$RefreshReg$"],"sources":["/Users/ignite/Hot Takes/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport supabase from \"./supabase\";\nimport \"./styles.css\";\nimport CatagoryFilter from \"./CatagoryFilter\";\nimport NewPostForm from \"./NewPostForm\";\nimport PostFeed from \"./PostFeed\";\n\n\nfunction App() {\n  // the form is initially at false which means hidden\n  const [showForm, setShowForm] = useState(false);\n  //used to define posts\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  //using  this to get the posts from the database \n  useEffect(function () {\n    \n    async function getPosts() {\n      setIsLoading(true);\n      //I will make a dropdown menu and user can pick if they want most recent posts or if they want the votes with the most upvots \n      const { data: posts, error } = await supabase.from(\"posts\").select(\"*\").order(\"\");\n      //setting the posts\n      setPosts(posts);\n      //after the data has loaded\n      setIsLoading(false);\n    }\n    getPosts();\n  }, []);\n\n\n  return (\n    <>\n      <Header show={showForm} setShowForm={setShowForm} />\n      {/* use state to show form, if the sate is false dont show anything */}\n      {showForm ? (\n        <NewPostForm setPosts={setPosts} setShowForm={setShowForm} />\n      ) : null}\n\n      <main className=\"main\">\n         {/* Component of the tags section */}\n      <CatagoryFilter />\n        {/* if the data is loading show the message, else show the posts   */}\n        {isLoading ? <Loader/>: <PostFeed posts={posts} />}\n\n       \n       \n        \n      </main>\n      <footer>Me</footer>\n    </>\n  );\n}\nfunction Loader(){\n  return <p style={{textTransform:\"uppercase\",textAlign:\"center\", marginTop:\"100px\"}}>Loading... Please Wait</p>\n}\n\nfunction Header({ show, setShowForm }) {\n  const appTitle = \"Hot Takes\";\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <h1>{appTitle}</h1>\n      </div>\n      {/* change state. if user clicks ones its true if they click again the state is now false */}\n      <button\n        className=\"btn\"\n        id=\"create-post\"\n        onClick={() => setShowForm((show) => !show)}\n      >\n        {show ? \"x\" : \"+\"}\n      </button>\n    </header>\n  );\n}\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,cAAc;AACrB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C;EACA,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;;EAGjD;EACAD,SAAS,CAAC,YAAY;IAEpB,eAAekB,QAAQA,CAAA,EAAG;MACxBD,YAAY,CAAC,IAAI,CAAC;MAClB;MACA,MAAM;QAAEE,IAAI,EAAEL,KAAK;QAAEM;MAAM,CAAC,GAAG,MAAMlB,QAAQ,CAACmB,IAAI,CAAC,OAAO,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,EAAE,CAAC;MACjF;MACAR,QAAQ,CAACD,KAAK,CAAC;MACf;MACAG,YAAY,CAAC,KAAK,CAAC;IACrB;IACAC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEX,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA,CAACkB,MAAM;MAACC,IAAI,EAAEd,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnDlB,QAAQ,gBACPL,OAAA,CAACH,WAAW;MAACW,QAAQ,EAAEA,QAAS;MAACF,WAAW,EAAEA;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GAC3D,IAAI,eAERvB,OAAA;MAAMwB,SAAS,EAAC,MAAM;MAAAP,QAAA,gBAEtBjB,OAAA,CAACJ,cAAc;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAEfd,SAAS,gBAAGT,OAAA,CAACyB,MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAEvB,OAAA,CAACF,QAAQ;QAACS,KAAK,EAAEA;MAAM;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAK9C,CAAC,eACPvB,OAAA;MAAAiB,QAAA,EAAQ;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACnB,CAAC;AAEP;AAACnB,EAAA,CA7CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8CZ,SAASsB,MAAMA,CAAA,EAAE;EACf,oBAAOzB,OAAA;IAAG2B,KAAK,EAAE;MAACC,aAAa,EAAC,WAAW;MAACC,SAAS,EAAC,QAAQ;MAAEC,SAAS,EAAC;IAAO,CAAE;IAAAb,QAAA,EAAC;EAAsB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAChH;AAACQ,GAAA,GAFQN,MAAM;AAIf,SAASP,MAAMA,CAAC;EAAEC,IAAI;EAAEb;AAAY,CAAC,EAAE;EACrC,MAAM0B,QAAQ,GAAG,WAAW;EAE5B,oBACEhC,OAAA;IAAQwB,SAAS,EAAC,QAAQ;IAAAP,QAAA,gBACxBjB,OAAA;MAAKwB,SAAS,EAAC,MAAM;MAAAP,QAAA,eACnBjB,OAAA;QAAAiB,QAAA,EAAKe;MAAQ;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eAENvB,OAAA;MACEwB,SAAS,EAAC,KAAK;MACfS,EAAE,EAAC,aAAa;MAChBC,OAAO,EAAEA,CAAA,KAAM5B,WAAW,CAAEa,IAAI,IAAK,CAACA,IAAI,CAAE;MAAAF,QAAA,EAE3CE,IAAI,GAAG,GAAG,GAAG;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACY,GAAA,GAlBQjB,MAAM;AAmBf,eAAef,GAAG;AAAC,IAAAuB,EAAA,EAAAK,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ignite/Hot Takes/src/NewPostForm.js\",\n  _s = $RefreshSig$();\nimport { SECTIONS } from \"./data.js\";\nimport { useState } from \"react\";\nimport supabase from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPostForm({\n  setPosts,\n  setShowForm\n}) {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCatagory] = useState(\"\");\n\n  //This is for the textarea\n  function autoGrow(event) {\n    event.target.style.height = \"5px\";\n    event.target.style.height = event.target.scrollHeight + \"px\";\n  }\n  async function handleSumbit(event) {\n    event.preventDefault();\n    if (title && description && category) {\n      // const newPost = {\n      //   id: Math.floor(Math.random() * 1000000),\n      //   title,\n      //   created_at: new Date(),\n      //   description,\n      //   category,\n      //   thumbsUp: 0,\n      //   thumbsDown: 0\n      // };\n\n      const {\n        data,\n        error\n      } = await supabase.f(\"facts\").insert([{\n        text,\n        source,\n        category\n      }]).select();\n      setPosts(prevPosts => [newPost[0], ...prevPosts]);\n      setTitle(\"\");\n      setDescription(\"\");\n      setCatagory(\"\");\n      setShowForm(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"post-form\",\n    onSubmit: handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-description\",\n      placeholder: \"Hot Take\",\n      value: title,\n      style: {\n        resize: \"none\"\n      },\n      onInput: autoGrow,\n      onChange: eventObj => setTitle(eventObj.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"form-description\",\n      placeholder: \"Explain Your Hot Take\",\n      value: description,\n      style: {\n        resize: \"none\"\n      },\n      onInput: autoGrow,\n      onChange: eventObj => setDescription(eventObj.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: description.split(\" \").length - 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: eventObj => setCatagory(eventObj.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), SECTIONS.map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: section.name,\n        children: section.name\n      }, section.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPostForm, \"Aze2HKpPJ11DBCDopJ0hs1rdcAs=\");\n_c = NewPostForm;\nexport default NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["SECTIONS","useState","supabase","jsxDEV","_jsxDEV","NewPostForm","setPosts","setShowForm","_s","title","setTitle","description","setDescription","category","setCatagory","autoGrow","event","target","style","height","scrollHeight","handleSumbit","preventDefault","data","error","f","insert","text","source","select","prevPosts","newPost","className","onSubmit","children","placeholder","value","resize","onInput","onChange","eventObj","fileName","_jsxFileName","lineNumber","columnNumber","split","length","map","section","name","_c","$RefreshReg$"],"sources":["/Users/ignite/Hot Takes/src/NewPostForm.js"],"sourcesContent":["import { SECTIONS } from \"./data.js\";\nimport { useState } from \"react\";\nimport supabase from \"./supabase\";\n\n\nfunction NewPostForm({setPosts, setShowForm}) {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCatagory] = useState(\"\");\n\n  //This is for the textarea\n  function autoGrow(event) {\n    event.target.style.height = \"5px\";\n    event.target.style.height = event.target.scrollHeight + \"px\";\n  }\n\n  async function handleSumbit(event) {\n    event.preventDefault();\n  \n    if (title && description && category) {\n      // const newPost = {\n      //   id: Math.floor(Math.random() * 1000000),\n      //   title,\n      //   created_at: new Date(),\n      //   description,\n      //   category,\n      //   thumbsUp: 0,\n      //   thumbsDown: 0\n      // };\n\n      const {data,error} = await supabase.f(\"facts\").insert([{text,source,category}]).select();\n      setPosts((prevPosts) => [newPost[0], ...prevPosts]);\n      setTitle(\"\");\n      setDescription(\"\");\n      setCatagory(\"\");\n      setShowForm(false);\n    }\n  }\n  \n  return (\n    <form className=\"post-form\" onSubmit={handleSumbit}>\n      {/* <input type=\"text\" placeholder=\"Hot Take\"/> */}\n      {/* Read value */}\n      <textarea\n        className=\"form-description\"\n        placeholder=\"Hot Take\"\n        value={title}\n        style={{ resize: \"none\" }}\n        onInput={autoGrow}\n        onChange={(eventObj) => setTitle(eventObj.target.value)}\n      ></textarea>\n      <textarea\n        className=\"form-description\"\n        placeholder=\"Explain Your Hot Take\"\n        value={description}\n        style={{ resize: \"none\" }}\n        onInput={autoGrow}\n        onChange={(eventObj) => setDescription(eventObj.target.value)}\n      ></textarea>\n      <span>{description.split(\" \").length - 1}</span>\n      <select\n        value={category}\n        onChange={(eventObj) => setCatagory(eventObj.target.value)}\n      >\n        <option value=\"\">Choose Topic</option>\n        {SECTIONS.map((section) => (\n          <option key={section.name} value={section.name}>\n            {section.name}\n          </option>\n        ))}\n      </select>\n      <button className=\"btn\">Post</button>\n    </form>\n  );\n}\nexport default NewPostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
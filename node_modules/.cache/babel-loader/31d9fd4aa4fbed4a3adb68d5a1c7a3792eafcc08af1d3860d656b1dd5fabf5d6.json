{"ast":null,"code":"var _jsxFileName = \"/Users/ignite/Hot Takes/src/PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// getting the section and default posts\nimport { SECTIONS } from \"./data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeed({\n  posts\n}) {\n  _s();\n  if (posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // using state to open and close the overlay\n  const [modalIndex, setModalIndex] = useState(null);\n\n  //function call to open the overlay\n  const openModal = index => {\n    setModalIndex(index);\n  };\n\n  //function call to close the overlay\n  const closeModal = () => {\n    setModalIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"posts-list\",\n      children: posts && posts.map((post, index) => {\n        // formating the data and time\n        let date = new Date(post.created_at);\n        let formattedDate = date.toLocaleDateString();\n        let formattedTime = date.toLocaleTimeString(\"en-US\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        });\n        let backgroundColor = \"#000000\";\n        let textColor = \"#ffffff\";\n        //getting the section\n        let section = SECTIONS.find(section => section.name === post.category);\n\n        //if the section is true the background color will be the color listed in the section object\n        if (section) {\n          backgroundColor = section.color;\n        }\n        if ([\"Soccer\", \"F1\", \"Home\"].includes(section.name)) {\n          textColor = \"#000000\";\n        }\n        return Post(post, index, openModal, formattedDate, formattedTime, backgroundColor, textColor, modalIndex, closeModal);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 1\n  }, this);\n}\n_s(PostFeed, \"sFyjJiF4ym5bmO3C8vI51n4Ryjg=\");\n_c = PostFeed;\nfunction Post(post, index, openModal, formattedDate, formattedTime, backgroundColor, textColor, modalIndex, closeModal) {\n  return (\n    /*#__PURE__*/\n    // create a post on the post feed\n    _jsxDEV(\"li\", {\n      className: \"post-on-feed\"\n      //when the user clicks on the post open the overlay\n      ,\n      id: `post-${index}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [formattedDate, \" \", formattedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        style: {\n          backgroundColor,\n          color: textColor\n        },\n        children: post.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"other-buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openModal(index),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-solid fa-bars\",\n              style: {\n                color: \"#ffffff\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumbs-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-regular fa-thumbs-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.thumbsUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-regular fa-thumbs-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 7\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.thumbsDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), modalIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `modal-${index}`,\n        className: `modal ${modalIndex === index ? \"modal-open\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            id: `close-${index}`,\n            onClick: event => {\n              event.stopPropagation();\n              //call close function which sets modelIndex to null\n              closeModal();\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = Post;\nexport default PostFeed;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostFeed\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"names":["React","useState","SECTIONS","jsxDEV","_jsxDEV","PostFeed","posts","_s","length","children","fileName","_jsxFileName","lineNumber","columnNumber","modalIndex","setModalIndex","openModal","index","closeModal","id","map","post","date","Date","created_at","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","backgroundColor","textColor","section","find","name","category","color","includes","Post","_c","className","title","style","onClick","thumbsUp","thumbsDown","event","stopPropagation","description","_c2","$RefreshReg$"],"sources":["/Users/ignite/Hot Takes/src/PostFeed.js"],"sourcesContent":["import React, { useState } from \"react\";\n// getting the section and default posts\nimport { SECTIONS } from \"./data.js\";\n\n\n\n\nfunction PostFeed({posts}) {\n\n  if(posts.length === 0){\n    return <h2>No Posts</h2>\n  }\n \n  // using state to open and close the overlay\n  const [modalIndex, setModalIndex] = useState(null);\n\n  //function call to open the overlay\n  const openModal = (index) => {\n    setModalIndex(index);\n  };\n\n   //function call to close the overlay\n  const closeModal = () => {\n    setModalIndex(null);\n  };\n\n\n\n  return (\n<section>\n    <ul id=\"posts-list\">\n      {/* looping through the posts , index is the */}\n      { posts && posts.map((post, index) => {\n        // formating the data and time\n        let date = new Date(post.created_at);\n        let formattedDate = date.toLocaleDateString();\n        let formattedTime = date.toLocaleTimeString(\"en-US\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        let backgroundColor = \"#000000\";\n        let textColor = \"#ffffff\";\n        //getting the section\n        let section = SECTIONS.find(\n          (section) => section.name === post.category\n        );\n\n        //if the section is true the background color will be the color listed in the section object\n        if (section) {\n          backgroundColor = section.color;\n        }\n        if ([\"Soccer\", \"F1\", \"Home\"].includes(section.name)) {\n          textColor = \"#000000\";\n        }\n\n        return Post(\n          post,\n          index,\n          openModal,\n          formattedDate,\n          formattedTime,\n          backgroundColor,\n          textColor,\n          modalIndex,\n          closeModal\n        );\n      })}\n    </ul>\n    </section>\n  );\n}\n\nfunction Post(\n  post,\n  index,\n  openModal,\n  formattedDate,\n  formattedTime,\n  backgroundColor,\n  textColor,\n  modalIndex,\n  closeModal\n) {\n\n  return (\n    // create a post on the post feed\n    <li\n      key={post.id}\n      className=\"post-on-feed\"\n      //when the user clicks on the post open the overlay\n      id={`post-${index}`}\n      \n    >\n      <h6>{post.title}</h6>\n      <span>\n        {formattedDate} {formattedTime}\n      </span>\n      <span className=\"tag\" style={{ backgroundColor, color: textColor }}>\n        {post.category}\n      </span>\n      <div className=\"post-buttons\">\n  <div className=\"other-buttons\">\n    <button onClick={() => openModal(index)}>\n      <i className=\"fa-solid fa-bars\" style={{color: \"#ffffff\"}}></i>\n    </button>\n  </div>\n  <div className=\"thumbs-buttons\">\n    <button>\n      <i className=\"fa-regular fa-thumbs-up\"></i>{\" \"}\n      <strong>{post.thumbsUp}</strong>\n    </button>\n    <button>\n      <i className=\"fa-regular fa-thumbs-down\"></i>{\" \"}\n      <strong>{post.thumbsDown}</strong>\n    </button>\n  </div>\n</div>\n      {/* if the modelIndex is equal to the current index , show the overlay*/}\n      {modalIndex === index && (\n        <div\n          id={`modal-${index}`}\n          className={`modal ${modalIndex === index ? \"modal-open\" : \"\"}`}>\n            {/* This is the information that is in the overlay */}\n          <div className=\"modal-content\">\n            {/* logic for the close button */}\n            <span\n              className=\"close\"\n              id={`close-${index}`}\n              onClick={(event) => {\n                event.stopPropagation();\n                //call close function which sets modelIndex to null\n                closeModal();\n              }}>\n              ×\n            </span>\n            <h6>{post.title}</h6>\n            <p>{post.description}</p>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default PostFeed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
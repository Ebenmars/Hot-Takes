{"ast":null,"code":"var _jsxFileName = \"/Users/ignite/Hot Takes/src/NewPostForm.js\",\n  _s = $RefreshSig$();\nimport { SECTIONS } from \"./data.js\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewPostForm() {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [catgory, setCatagory] = useState(\"\");\n\n  //This is for the textarea\n  function autoGrow(event) {\n    event.target.style.height = \"5px\";\n    event.target.style.height = event.target.scrollHeight + \"px\";\n  }\n  function handleSumbit(event) {\n    event.preventDefault();\n    if (title && description && catagory) {\n      const newPost = {\n        id: 1,\n        title,\n        created_at: new Date(),\n        description,\n        category,\n        thumbsUp: 0,\n        thumbsDown: 0\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"post-form\",\n    onSubmit: () => handleSumbit,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      class: \"form-description\",\n      placeholder: \"Hot Take\",\n      value: title,\n      style: {\n        resize: \"none\"\n      },\n      onInput: autoGrow,\n      onChange: eventObj => setTitle(eventObj.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      class: \"form-description\",\n      placeholder: \"Explain Your Hot Take\",\n      value: description,\n      style: {\n        resize: \"none\"\n      },\n      onInput: autoGrow,\n      onChange: eventObj => setdescription(eventObj.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: description.split(\" \").length - 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: catagory,\n      onChange: eventObj => setCatagory(eventObj.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose Topic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), SECTIONS.map(section => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: section.name,\n        children: section.name\n      }, section.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(NewPostForm, \"+oncacF7DQudadRh8cCajf2Gd0k=\");\n_c = NewPostForm;\nexport default NewPostForm;\nvar _c;\n$RefreshReg$(_c, \"NewPostForm\");","map":{"version":3,"names":["SECTIONS","useState","jsxDEV","_jsxDEV","NewPostForm","_s","title","setTitle","description","setdescription","catgory","setCatagory","autoGrow","event","target","style","height","scrollHeight","handleSumbit","preventDefault","catagory","newPost","id","created_at","Date","category","thumbsUp","thumbsDown","className","onSubmit","children","class","placeholder","value","resize","onInput","onChange","eventObj","fileName","_jsxFileName","lineNumber","columnNumber","split","length","map","section","name","_c","$RefreshReg$"],"sources":["/Users/ignite/Hot Takes/src/NewPostForm.js"],"sourcesContent":["import { SECTIONS } from \"./data.js\";\nimport { useState } from \"react\";\n\n\nfunction NewPostForm() {\n  const [title, setTitle] = useState(\"\");\n  const [description, setdescription] = useState(\"\");\n  const [catgory, setCatagory] = useState(\"\");\n\n  //This is for the textarea\n  function autoGrow(event) {\n    event.target.style.height = \"5px\";\n    event.target.style.height = event.target.scrollHeight + \"px\";\n  }\n\n  function handleSumbit(event) {\n    event.preventDefault();\n\n    if (title && description && catagory) {\n      const newPost = {\n        id:1,\n        title,\n        created_at: new Date(),\n        description,\n        category,\n        thumbsUp: 0,\n        thumbsDown: 0\n      }\n    }\n  }\n  return (\n    <form className=\"post-form\" onSubmit={() => handleSumbit}>\n      {/* <input type=\"text\" placeholder=\"Hot Take\"/> */}\n      {/* Read value */}\n      <textarea\n        class=\"form-description\"\n        placeholder=\"Hot Take\"\n        value={title}\n        style={{ resize: \"none\" }}\n        onInput={autoGrow}\n        onChange={(eventObj) => setTitle(eventObj.target.value)}\n      ></textarea>\n      <textarea\n        class=\"form-description\"\n        placeholder=\"Explain Your Hot Take\"\n        value={description}\n        style={{ resize: \"none\" }}\n        onInput={autoGrow}\n        onChange={(eventObj) => setdescription(eventObj.target.value)}\n      ></textarea>\n      <span>{description.split(\" \").length - 1}</span>\n      <select\n        value={catagory}\n        onChange={(eventObj) => setCatagory(eventObj.target.value)}\n      >\n        <option value=\"\">Choose Topic</option>\n        {SECTIONS.map((section) => (\n          <option key={section.name} value={section.name}>\n            {section.name}\n          </option>\n        ))}\n      </select>\n      <button class=\"btn\">Post</button>\n    </form>\n  );\n}\nexport default NewPostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/ignite/Hot Takes/src/PostFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// getting the section and default posts\nimport { SECTIONS, defaultPosts } from \"./data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostFeed() {\n  _s();\n  // using state to open and close the overlay\n  const [modalIndex, setModalIndex] = useState(null);\n\n  //function call to open the overlay\n  const openModal = index => {\n    setModalIndex(index);\n  };\n\n  //function call to close the overlay\n  const closeModal = () => {\n    setModalIndex(null);\n  };\n  const posts = defaultPosts;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"posts-list\",\n    children: posts.map((post, index) => {\n      // formating the data and time\n      let date = new Date(post.created_at);\n      let formattedDate = date.toLocaleDateString();\n      let formattedTime = date.toLocaleTimeString(\"en-US\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n      let backgroundColor = \"#000000\";\n      let textColor = \"#ffffff\";\n      //getting the section\n      let section = SECTIONS.find(section => section.name === post.category);\n\n      //if the section is true the background color will be the color listed in the section object\n      if (section) {\n        backgroundColor = section.color;\n      }\n      if ([\"Soccer\", \"F1\", \"Home\"].includes(section.name)) {\n        textColor = \"#000000\";\n      }\n      return Post(post, index, openModal, formattedDate, formattedTime, backgroundColor, textColor, modalIndex, closeModal);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(PostFeed, \"sFyjJiF4ym5bmO3C8vI51n4Ryjg=\");\n_c = PostFeed;\nfunction Post(post, index, openModal, formattedDate, formattedTime, backgroundColor, textColor, modalIndex, closeModal) {\n  return (\n    /*#__PURE__*/\n    // create a post on the post feed\n    _jsxDEV(\"li\", {\n      className: \"post-on-feed\"\n      // \n      ,\n      id: `post-${index}`,\n      onClick: () => openModal(index),\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [formattedDate, \" \", formattedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        style: {\n          backgroundColor,\n          color: textColor\n        },\n        children: post.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: post.thumbsUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-regular fa-thumbs-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: post.thumbsDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), modalIndex === index && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `modal-${index}`,\n        className: `modal ${modalIndex === index ? \"modal-open\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close\",\n            id: `close-${index}`,\n            onClick: event => {\n              event.stopPropagation();\n              closeModal();\n            },\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c2 = Post;\nexport default PostFeed;\nvar _c, _c2;\n$RefreshReg$(_c, \"PostFeed\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"names":["React","useState","SECTIONS","defaultPosts","jsxDEV","_jsxDEV","PostFeed","_s","modalIndex","setModalIndex","openModal","index","closeModal","posts","id","children","map","post","date","Date","created_at","formattedDate","toLocaleDateString","formattedTime","toLocaleTimeString","hour","minute","backgroundColor","textColor","section","find","name","category","color","includes","Post","fileName","_jsxFileName","lineNumber","columnNumber","_c","className","onClick","title","style","thumbsUp","thumbsDown","event","stopPropagation","description","_c2","$RefreshReg$"],"sources":["/Users/ignite/Hot Takes/src/PostFeed.js"],"sourcesContent":["import React, { useState } from \"react\";\n// getting the section and default posts\nimport { SECTIONS, defaultPosts } from \"./data.js\";\n\nfunction PostFeed() {\n  // using state to open and close the overlay\n  const [modalIndex, setModalIndex] = useState(null);\n\n  //function call to open the overlay\n  const openModal = (index) => {\n    setModalIndex(index);\n  };\n\n   //function call to close the overlay\n  const closeModal = () => {\n    setModalIndex(null);\n  };\n\n  const posts = defaultPosts;\n\n\n  return (\n\n    <ul id=\"posts-list\">\n      {/* looping through the posts */}\n      {posts.map((post, index) => {\n        // formating the data and time\n        let date = new Date(post.created_at);\n        let formattedDate = date.toLocaleDateString();\n        let formattedTime = date.toLocaleTimeString(\"en-US\", {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n        });\n        let backgroundColor = \"#000000\";\n        let textColor = \"#ffffff\";\n        //getting the section\n        let section = SECTIONS.find(\n          (section) => section.name === post.category\n        );\n\n        //if the section is true the background color will be the color listed in the section object\n        if (section) {\n          backgroundColor = section.color;\n        }\n        if ([\"Soccer\", \"F1\", \"Home\"].includes(section.name)) {\n          textColor = \"#000000\";\n        }\n\n        return Post(\n          post,\n          index,\n          openModal,\n          formattedDate,\n          formattedTime,\n          backgroundColor,\n          textColor,\n          modalIndex,\n          closeModal\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction Post(\n  post,\n  index,\n  openModal,\n  formattedDate,\n  formattedTime,\n  backgroundColor,\n  textColor,\n  modalIndex,\n  closeModal\n) {\n  return (\n    // create a post on the post feed\n    <li\n      key={post.id}\n      className=\"post-on-feed\"\n      // \n      id={`post-${index}`}\n      onClick={() => openModal(index)}\n    >\n      <h6>{post.title}</h6>\n      <span>\n        {formattedDate} {formattedTime}\n      </span>\n      <span className=\"tag\" style={{ backgroundColor, color: textColor }}>\n        {post.category}\n      </span>\n      <div className=\"vote-buttons\">\n        <button>\n          <i className=\"fa-regular fa-thumbs-up\"></i>{\" \"}\n          <strong>{post.thumbsUp}</strong>\n        </button>\n        <button>\n          <i className=\"fa-regular fa-thumbs-down\"></i>{\" \"}\n          <strong>{post.thumbsDown}</strong>\n        </button>\n      </div>\n      {modalIndex === index && (\n        <div\n          id={`modal-${index}`}\n          className={`modal ${modalIndex === index ? \"modal-open\" : \"\"}`}>\n          <div className=\"modal-content\">\n            <span\n              className=\"close\"\n              id={`close-${index}`}\n              onClick={(event) => {\n                event.stopPropagation();\n                closeModal();\n              }}>\n              Ã—\n            </span>\n            <h6>{post.title}</h6>\n            <p>{post.description}</p>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n}\n\nexport default PostFeed;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}